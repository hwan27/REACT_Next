{"ast":null,"code":"import { all, fork, takeEvery, call, put, delay } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_IN_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from \"../reducers/user\"; // const HELLO_SAGA = \"HELLO_SAGA\";\n\nfunction loginAPI() {\n  return axios.post('/login'); // 서버에 요청을 보내는 부분\n}\n\nfunction signUpAPI() {}\n\nfunction* login() {\n  try {\n    // yield call(loginAPI);\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* signUp() {\n  try {\n    // yield call(signUpAPI);\n    yield delay(2000);\n    throw new Error('에러');\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n  yield all([fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/changhwanoh/practice/js/React/NodeBird/frontend/sagas/user.js"],"names":["all","fork","takeEvery","call","put","delay","axios","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_IN_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","post","signUpAPI","login","type","e","console","error","signUp","Error","watchLogin","watchSignUp","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0CC,KAA1C,QAAuD,oBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACCC,cADD,EAECC,cAFD,EAGCC,cAHD,EAICC,eAJD,EAKCC,eALD,EAMCC,eAND,QAOO,kBAPP,C,CASA;;AAEA,SAASC,QAAT,GAAoB;AACnB,SAAOP,KAAK,CAACQ,IAAN,CAAW,QAAX,CAAP,CADmB,CACQ;AAC3B;;AACD,SAASC,SAAT,GAAqB,CACpB;;AAED,UAAUC,KAAV,GAAkB;AACjB,MAAI;AACH;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACTa,MAAAA,IAAI,EAAER;AADG,KAAD,CAAT;AAGA,GAND,CAME,OAAOS,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMd,GAAG,CAAC;AACTa,MAAAA,IAAI,EAAET;AADG,KAAD,CAAT;AAGA;AACD;;AACD,UAAUa,MAAV,GAAkB;AACjB,MAAI;AACH;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAM,IAAIiB,KAAJ,CAAU,IAAV,CAAN;AACA,UAAMlB,GAAG,CAAC;AACTa,MAAAA,IAAI,EAAEN;AADG,KAAD,CAAT;AAGA,GAPD,CAOE,OAAOO,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMd,GAAG,CAAC;AACTa,MAAAA,IAAI,EAAEL,eADG;AAETQ,MAAAA,KAAK,EAAEF;AAFE,KAAD,CAAT;AAIA;AACD;;AACD,UAAUK,UAAV,GAAuB;AACtB,QAAMrB,SAAS,CAACK,cAAD,EAAiBS,KAAjB,CAAf;AACA;;AAED,UAAUQ,WAAV,GAAwB;AACvB,QAAMtB,SAAS,CAACQ,eAAD,EAAkBW,MAAlB,CAAf;AACA;;AAED,eAAe,UAAUI,QAAV,GAAqB;AACnC,QAAMzB,GAAG,CAAC,CAACC,IAAI,CAACsB,UAAD,CAAL,CAAD,CAAT;AACA,QAAMvB,GAAG,CAAC,CAACC,IAAI,CAACuB,WAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { all, fork, takeEvery, call, put, delay } from \"redux-saga/effects\";\nimport axios from 'axios'\nimport {\n\tLOG_IN_REQUEST,\n\tLOG_IN_FAILURE,\n\tLOG_IN_SUCCESS,\n\tSIGN_UP_REQUEST,\n\tSIGN_UP_SUCCESS,\n\tSIGN_UP_FAILURE,\n} from \"../reducers/user\";\n\n// const HELLO_SAGA = \"HELLO_SAGA\";\n\nfunction loginAPI() {\n\treturn axios.post('/login')// 서버에 요청을 보내는 부분\n}\nfunction signUpAPI() {\n}\n\nfunction* login() {\n\ttry {\n\t\t// yield call(loginAPI);\n\t\tyield delay(2000)\n\t\tyield put({\n\t\t\ttype: LOG_IN_SUCCESS\n\t\t});\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\tyield put({\n\t\t\ttype: LOG_IN_FAILURE\n\t\t});\n\t} \n}\nfunction* signUp(){\n\ttry {\n\t\t// yield call(signUpAPI);\n\t\tyield delay(2000);\n\t\tthrow new Error('에러');\n\t\tyield put({\n\t\t\ttype: SIGN_UP_SUCCESS\n\t\t})\n\t} catch (e) {\n\t\tconsole.error(e)\n\t\tyield put({\n\t\t\ttype: SIGN_UP_FAILURE,\n\t\t\terror: e\n\t\t})\n\t}\n}\nfunction* watchLogin() {\n\tyield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction* watchSignUp() {\n\tyield takeEvery(SIGN_UP_REQUEST, signUp)\n}\n\nexport default function* userSaga() {\n\tyield all([fork(watchLogin)]);\n\tyield all([fork(watchSignUp)])\n}\n"]},"metadata":{},"sourceType":"module"}