{"ast":null,"code":"import { all, fork, takeLatest, call, put, take } from \"redux-saga/effects\";\nimport { LOG_IN, LOG_IN_FAILURE, LOG_IN_SUCCESS } from \"../reducers/user\";\nconst HELLO_SAGA = \"HELLO_SAGA\";\n\nfunction loginAPI() {}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(LOG_IN);\n  put({\n    type: LOG_IN_SUCCESS\n  });\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"sources":["/Users/changhwanoh/practice/js/React/NodeBird/frontend/sagas/user.js"],"names":["all","fork","takeLatest","call","put","take","LOG_IN","LOG_IN_FAILURE","LOG_IN_SUCCESS","HELLO_SAGA","loginAPI","login","type","e","console","error","watchLogin","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,IAA3C,QAAuD,oBAAvD;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,cAAjC,QAAuD,kBAAvD;AAEA,MAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAoB,CAAE;;AAEtB,UAAUC,KAAV,GAAkB;AACjB,MAAI;AACH,UAAMR,IAAI,CAACO,QAAD,CAAV;AACA,UAAMN,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAEJ;AADG,KAAD,CAAT;AAGA,GALD,CAKE,OAAOK,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMT,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAEL;AADG,KAAD,CAAT;AAGA;AACD;;AACD,UAAUS,UAAV,GAAuB;AACtB,QAAMX,IAAI,CAACC,MAAD,CAAV;AACAF,EAAAA,GAAG,CAAC;AACHQ,IAAAA,IAAI,EAAEJ;AADH,GAAD,CAAH;AAGA;;AAED,eAAe,UAAUS,QAAV,GAAqB;AACnC,QAAMjB,GAAG,CAAC,CAACC,IAAI,CAACe,UAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { all, fork, takeLatest, call, put, take } from \"redux-saga/effects\";\nimport { LOG_IN, LOG_IN_FAILURE, LOG_IN_SUCCESS } from \"../reducers/user\";\n\nconst HELLO_SAGA = \"HELLO_SAGA\";\n\nfunction loginAPI() {}\n\nfunction* login() {\n\ttry {\n\t\tyield call(loginAPI);\n\t\tyield put({\n\t\t\ttype: LOG_IN_SUCCESS\n\t\t});\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\tyield put({\n\t\t\ttype: LOG_IN_FAILURE\n\t\t});\n\t}\n}\nfunction* watchLogin() {\n\tyield take(LOG_IN);\n\tput({\n\t\ttype: LOG_IN_SUCCESS\n\t});\n}\n\nexport default function* userSaga() {\n\tyield all([fork(watchLogin)]);\n}\n"]},"metadata":{},"sourceType":"module"}