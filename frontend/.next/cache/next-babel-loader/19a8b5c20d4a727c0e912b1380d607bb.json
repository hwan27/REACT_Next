{"ast":null,"code":"import { all, fork, takeLatest, takeEvery, call, put, take } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_IN_SUCCESS } from \"../reducers/user\";\nconst HELLO_SAGA = \"HELLO_SAGA\";\n\nfunction loginAPI() {//서버에 요청을 보내는 부분\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"sources":["/Users/changhwanoh/practice/js/React/NodeBird/frontend/sagas/user.js"],"names":["all","fork","takeLatest","takeEvery","call","put","take","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_IN_SUCCESS","HELLO_SAGA","loginAPI","login","type","e","console","error","watchLogin","userSaga"],"mappings":"AAAA,SACCA,GADD,EAECC,IAFD,EAGCC,UAHD,EAICC,SAJD,EAKCC,IALD,EAMCC,GAND,EAOCC,IAPD,QAQO,oBARP;AASA,SACCC,cADD,EAECC,cAFD,EAGCC,cAHD,QAIO,kBAJP;AAMA,MAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAoB,CACnB;AACA;;AAED,UAAUC,KAAV,GAAkB;AACjB,MAAI;AACH,UAAMR,IAAI,CAACO,QAAD,CAAV;AACA,UAAMN,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAEJ;AADG,KAAD,CAAT;AAGA,GALD,CAKE,OAAOK,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMT,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAEL;AADG,KAAD,CAAT;AAGA;AACD;;AACD,UAAUS,UAAV,GAAuB;AACtB,QAAMd,SAAS,CAACI,cAAD,EAAiBK,KAAjB,CAAf;AACA;;AAED,eAAe,UAAUM,QAAV,GAAqB;AACnC,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACgB,UAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import {\n\tall,\n\tfork,\n\ttakeLatest,\n\ttakeEvery,\n\tcall,\n\tput,\n\ttake\n} from \"redux-saga/effects\";\nimport {\n\tLOG_IN_REQUEST,\n\tLOG_IN_FAILURE,\n\tLOG_IN_SUCCESS\n} from \"../reducers/user\";\n\nconst HELLO_SAGA = \"HELLO_SAGA\";\n\nfunction loginAPI() {\n\t//서버에 요청을 보내는 부분\n}\n\nfunction* login() {\n\ttry {\n\t\tyield call(loginAPI);\n\t\tyield put({\n\t\t\ttype: LOG_IN_SUCCESS\n\t\t});\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\tyield put({\n\t\t\ttype: LOG_IN_FAILURE\n\t\t});\n\t}\n}\nfunction* watchLogin() {\n\tyield takeEvery(LOG_IN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n\tyield all([fork(watchLogin)]);\n}\n"]},"metadata":{},"sourceType":"module"}