{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, call, put, take } from \"redux-saga/effects\";\nimport { LOG_IN, LOG_IN_FAILURE, LOG_IN_SUCCESS } from \"../reducers/user\";\nvar HELLO_SAGA = \"HELLO_SAGA\";\n\nfunction loginAPI() {}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return take(LOG_IN);\n\n        case 2:\n          _context2.next = 4;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLogin)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/changhwanoh/practice/js/React/NodeBird/frontend/sagas/user.js"],"names":["login","watchLogin","userSaga","all","fork","takeLatest","call","put","take","LOG_IN","LOG_IN_FAILURE","LOG_IN_SUCCESS","HELLO_SAGA","loginAPI","type","console","error"],"mappings":";;;;yBAOUA,K;;;yBAaAC,U;;;yBAOeC,Q;;AA3BzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,IAA3C,QAAuD,oBAAvD;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,cAAjC,QAAuD,kBAAvD;AAEA,IAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAoB,CAAE;;AAEtB,SAAUb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE,iBAAMM,IAAI,CAACO,QAAD,CAAV;;AAFF;AAAA;AAGE,iBAAMN,GAAG,CAAC;AACTO,YAAAA,IAAI,EAAEH;AADG,WAAD,CAAT;;AAHF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOEI,UAAAA,OAAO,CAACC,KAAR;AAPF;AAQE,iBAAMT,GAAG,CAAC;AACTO,YAAAA,IAAI,EAAEJ;AADG,WAAD,CAAT;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUT,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMO,IAAI,CAACC,MAAD,CAAV;;AADD;AAAA;AAEC,iBAAMF,GAAG,CAAC;AACTO,YAAAA,IAAI,EAAEH;AADG,WAAD,CAAT;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAe,SAAUT,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAMC,GAAG,CAAC,CAACC,IAAI,CAACH,UAAD,CAAL,CAAD,CAAT;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, takeLatest, call, put, take } from \"redux-saga/effects\";\nimport { LOG_IN, LOG_IN_FAILURE, LOG_IN_SUCCESS } from \"../reducers/user\";\n\nconst HELLO_SAGA = \"HELLO_SAGA\";\n\nfunction loginAPI() {}\n\nfunction* login() {\n\ttry {\n\t\tyield call(loginAPI);\n\t\tyield put({\n\t\t\ttype: LOG_IN_SUCCESS\n\t\t});\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\tyield put({\n\t\t\ttype: LOG_IN_FAILURE\n\t\t});\n\t}\n}\nfunction* watchLogin() {\n\tyield take(LOG_IN);\n\tyield put({\n\t\ttype: LOG_IN_SUCCESS\n\t});\n}\n\nexport default function* userSaga() {\n\tyield all([fork(watchLogin)]);\n}\n"]},"metadata":{},"sourceType":"module"}